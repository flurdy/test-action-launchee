name: Add a new service configuration

on:
  workflow_call:
    inputs:
      repositoryName:
        description: "Repository name"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      repositoryName:
        description: "Repository name"
        required: true
        type: string

run-name: ${{ inputs.repositoryName }}

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: read

concurrency:
  group: "add-or-remove-service-config"
  cancel-in-progress: false

env:
  service-root: "services/${{ inputs.repositoryName }}"
  config-comment: "# Config for ${{ inputs.repositoryName }}, settings should be in KEY=value format"
  cdp-environments: "infra-dev management dev test perf-test prod"
  #   cdp-gitbot-email: "131385681+cdp-gh-bot[bot]@users.noreply.github.com"
  #   cdp-gitbot-name: "cdp-gh-bot[bot]"
  cdp-gitbot-email: "30552+flurdy@users.noreply.github.com"
  cdp-gitbot-name: "flurdy"

jobs:
  add_service:
    name: "Add a new service"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      commit-hash: ${{ steps.setting-output.outputs.commit-hash }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Get token
      #   id: get-token
      #   uses: DEFRA/cdp-build-action/get-github-token@main
      #   with:
      #     role_to_assume: arn:aws:iam::094954420758:role/app-config-role
      #     private_key_id: cdp/platform/gh_apps/DEFRA/cdp-gh-action/private-key
      #     app_id: 405317
      #     email: ${{ env.cdp-gitbot-email }}
      #     username: ${{ env.cdp-gitbot-name }}

      - name: Configure git committer
        run: |
          git config user.email "${{ env.cdp-gitbot-email }}"
          git config user.name "${{ env.cdp-gitbot-name }}"
      - name: Ensure up to date main branch
        run: git pull
      - name: make service directories
        run: |
          for cdpenv in ${{ env.cdp-environments }}; do
            mkdir -p ${{ env.service-root }}/${cdpenv}
          done
      - name: Create empty service configurations
        run: |
          if test ! -e "${{ env.service-root }}/defaults.env"; then
            echo "${{ env.config-comment }}" >> ${{ env.service-root }}/defaults.env
          fi
          for cdpenv in ${{ env.cdp-environments }}; do
            if test ! -e "${{ env.service-root }}/${cdpenv}/${{ inputs.repositoryName }}.env"; then
              echo "${{ env.config-comment }}" >> ${{ env.service-root }}/${cdpenv}/${{ inputs.repositoryName }}.env
            fi
          done
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      # - name: Check env files
        # run: python validate.py
      - name: Commit changes
        run: |
          if [[ -z "$(git status -s)" ]]; then
            echo "No config files added to commit"
            exit 1
          else
            git add ${{ env.service-root }}
            git commit -m "Add service configuration for ${{ inputs.repositoryName }}"
          fi
      - name: Push branch
        run: git push origin main
      - name: Setting output
        id: setting-output
        run: echo "commit-hash=$(git rev-parse --verify HEAD)" >> "$GITHUB_OUTPUT"

   debug-apply:
     name: "Apply changes"
     needs: add_service
     runs-on: ubuntu-latest
     steps:
       - name: Checkout repository#
         run: |
           echo the hash was ${{ github.sha }}
           echo the hash is ${{ needs.add_service.outputs.commit-hash }}

#   apply:
#     name: "Apply changes"
#     needs: add_service
#     uses: DEFRA/cdp-build-action/tf-build/apply@main
#     with:
#       commit-hash: ${{ github.sha }}
